DIGEST a57140697a06a6df7c8d343a9e251865
FLF.Tactics
R666:669 LF.Poly <> <> lib
prf 945:950 <> silly1
R972:974 Coq.Init.Datatypes <> nat ind
R988:997 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1011:1019 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1025:1027 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1020:1020 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1022:1022 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1024:1024 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1021:1021 LF.Tactics <> n var
R1023:1023 LF.Tactics <> o var
R1028:1028 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1030:1030 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1032:1032 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1029:1029 LF.Tactics <> m var
R1031:1031 LF.Tactics <> p var
R1003:1005 Coq.Init.Logic <> ::type_scope:x_'='_x not
R998:998 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1000:1000 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1002:1002 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R999:999 LF.Tactics <> n var
R1001:1001 LF.Tactics <> o var
R1006:1006 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1008:1008 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1010:1010 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1007:1007 LF.Tactics <> n var
R1009:1009 LF.Tactics <> p var
R984:986 Coq.Init.Logic <> ::type_scope:x_'='_x not
R983:983 LF.Tactics <> n var
R987:987 LF.Tactics <> m var
prf 1556:1561 <> silly2
R1583:1585 Coq.Init.Datatypes <> nat ind
R1599:1608 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1609:1609 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1652:1661 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1667:1669 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1662:1662 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1664:1664 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1666:1666 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1663:1663 LF.Tactics <> n var
R1665:1665 LF.Tactics <> o var
R1670:1670 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1672:1672 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1674:1674 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1671:1671 LF.Tactics <> m var
R1673:1673 LF.Tactics <> p var
R1624:1626 Coq.Init.Datatypes <> nat ind
R1635:1638 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1644:1646 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1639:1639 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1641:1641 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1643:1643 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1640:1640 LF.Tactics <> q var
R1642:1642 LF.Tactics <> o var
R1647:1647 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1649:1649 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1651:1651 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1648:1648 LF.Tactics <> r var
R1650:1650 LF.Tactics <> p var
R1631:1633 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1630:1630 LF.Tactics <> q var
R1634:1634 LF.Tactics <> r var
R1595:1597 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1594:1594 LF.Tactics <> n var
R1598:1598 LF.Tactics <> m var
prf 2185:2191 <> silly2a
R2209:2211 Coq.Init.Datatypes <> nat ind
R2233:2242 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2243:2243 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2290:2299 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2303:2305 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2300:2300 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2302:2302 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2301:2301 LF.Tactics <> n var
R2306:2306 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2308:2308 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2307:2307 LF.Tactics <> m var
R2258:2260 Coq.Init.Datatypes <> nat ind
R2277:2280 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2284:2286 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2281:2281 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2283:2283 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2282:2282 LF.Tactics <> q var
R2287:2287 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2289:2289 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2288:2288 LF.Tactics <> r var
R2269:2271 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2264:2264 LF.Poly <> :::'('_x_','_x_')' not
R2266:2266 LF.Poly <> :::'('_x_','_x_')' not
R2268:2268 LF.Poly <> :::'('_x_','_x_')' not
R2265:2265 LF.Tactics <> q var
R2267:2267 LF.Tactics <> q var
R2272:2272 LF.Poly <> :::'('_x_','_x_')' not
R2274:2274 LF.Poly <> :::'('_x_','_x_')' not
R2276:2276 LF.Poly <> :::'('_x_','_x_')' not
R2273:2273 LF.Tactics <> r var
R2275:2275 LF.Tactics <> r var
R2225:2227 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2220:2220 LF.Poly <> :::'('_x_','_x_')' not
R2222:2222 LF.Poly <> :::'('_x_','_x_')' not
R2224:2224 LF.Poly <> :::'('_x_','_x_')' not
R2221:2221 LF.Tactics <> n var
R2223:2223 LF.Tactics <> n var
R2228:2228 LF.Poly <> :::'('_x_','_x_')' not
R2230:2230 LF.Poly <> :::'('_x_','_x_')' not
R2232:2232 LF.Poly <> :::'('_x_','_x_')' not
R2229:2229 LF.Tactics <> m var
R2231:2231 LF.Tactics <> m var
prf 2500:2507 <> silly_ex
R2516:2516 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2562:2571 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2585:2593 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2601:2603 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2594:2598 LF.Basics <> evenb def
R2604:2607 LF.Basics <> true constr
R2578:2580 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2572:2575 LF.Basics <> oddb def
R2581:2584 LF.Basics <> true constr
R2541:2544 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2555:2557 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2545:2548 LF.Basics <> oddb def
R2551:2551 Coq.Init.Datatypes <> S constr
R2553:2553 LF.Tactics <> n var
R2558:2561 LF.Basics <> true constr
R2534:2536 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2527:2531 LF.Basics <> evenb def
R2533:2533 LF.Tactics <> n var
R2537:2540 LF.Basics <> true constr
prf 2869:2883 <> silly3_firsttry
R2899:2901 Coq.Init.Datatypes <> nat ind
R2925:2934 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2949:2951 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2935:2935 LF.Basics <> ::nat_scope:x_'=?'_x not
R2943:2947 LF.Basics <> ::nat_scope:x_'=?'_x not
R2936:2936 Coq.Init.Datatypes <> S constr
R2939:2939 Coq.Init.Datatypes <> S constr
R2941:2941 LF.Tactics <> n var
R2952:2955 LF.Basics <> true constr
R2914:2917 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2924:2924 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2910:2913 LF.Basics <> true constr
R2919:2922 LF.Basics <> ::nat_scope:x_'=?'_x not
R2918:2918 LF.Tactics <> n var
prf 3506:3518 <> rev_exercise1
R3537:3540 LF.Poly <> list ind
R3542:3544 Coq.Init.Datatypes <> nat ind
R3563:3571 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3574:3576 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3572:3573 LF.Tactics <> l' var
R3577:3579 LF.Poly <> rev def
R3581:3581 LF.Tactics <> l var
R3554:3556 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3553:3553 LF.Tactics <> l var
R3557:3559 LF.Poly <> rev def
R3561:3562 LF.Tactics <> l' var
R3600:3602 LF.Poly <> rev def
R3648:3661 LF.Poly <> rev_involutive thm
R3648:3661 LF.Poly <> rev_involutive thm
def 4138:4153 <> trans_eq_example
R4179:4181 Coq.Init.Datatypes <> nat ind
R4203:4211 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4225:4233 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4239:4241 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4234:4234 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4236:4236 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4238:4238 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4235:4235 LF.Tactics <> a var
R4237:4237 LF.Tactics <> b var
R4242:4242 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4244:4244 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4246:4246 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4243:4243 LF.Tactics <> e var
R4245:4245 LF.Tactics <> f var
R4217:4219 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4212:4212 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4214:4214 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4216:4216 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4213:4213 LF.Tactics <> c var
R4215:4215 LF.Tactics <> d var
R4220:4220 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4222:4222 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4224:4224 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4221:4221 LF.Tactics <> e var
R4223:4223 LF.Tactics <> f var
R4195:4197 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4190:4190 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4192:4192 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4194:4194 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4191:4191 LF.Tactics <> a var
R4193:4193 LF.Tactics <> b var
R4198:4198 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4200:4200 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4202:4202 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4199:4199 LF.Tactics <> c var
R4201:4201 LF.Tactics <> d var
prf 4503:4510 <> trans_eq
R4539:4539 LF.Tactics <> X var
R4550:4553 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4559:4562 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4564:4566 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4563:4563 LF.Tactics <> n var
R4567:4567 LF.Tactics <> o var
R4555:4557 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4554:4554 LF.Tactics <> m var
R4558:4558 LF.Tactics <> o var
R4546:4548 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4545:4545 LF.Tactics <> n var
R4549:4549 LF.Tactics <> m var
def 4822:4838 <> trans_eq_example'
R4864:4866 Coq.Init.Datatypes <> nat ind
R4888:4896 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4910:4918 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4924:4926 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4919:4919 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4921:4921 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4923:4923 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4920:4920 LF.Tactics <> a var
R4922:4922 LF.Tactics <> b var
R4927:4927 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4929:4929 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4931:4931 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4928:4928 LF.Tactics <> e var
R4930:4930 LF.Tactics <> f var
R4902:4904 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4897:4897 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4899:4899 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4901:4901 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4898:4898 LF.Tactics <> c var
R4900:4900 LF.Tactics <> d var
R4905:4905 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4907:4907 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4909:4909 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4906:4906 LF.Tactics <> e var
R4908:4908 LF.Tactics <> f var
R4880:4882 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4875:4875 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4877:4877 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4879:4879 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4876:4876 LF.Tactics <> a var
R4878:4878 LF.Tactics <> b var
R4883:4883 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4885:4885 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4887:4887 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4884:4884 LF.Tactics <> c var
R4886:4886 LF.Tactics <> d var
R5402:5402 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5404:5404 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5406:5406 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5384:5391 LF.Tactics <> trans_eq thm
R5402:5402 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5404:5404 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5406:5406 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5384:5391 LF.Tactics <> trans_eq thm
def 5748:5764 <> trans_eq_exercise
R5786:5788 Coq.Init.Datatypes <> nat ind
R5813:5821 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5833:5841 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5842:5842 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5848:5852 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5863:5863 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5844:5846 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R5843:5843 LF.Tactics <> n var
R5847:5847 LF.Tactics <> p var
R5853:5860 LF.Basics <> minustwo def
R5862:5862 LF.Tactics <> o var
R5822:5822 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5828:5831 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5824:5826 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R5823:5823 LF.Tactics <> n var
R5827:5827 LF.Tactics <> p var
R5832:5832 LF.Tactics <> m var
R5798:5801 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5812:5812 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5797:5797 LF.Tactics <> m var
R5802:5809 LF.Basics <> minustwo def
R5811:5811 LF.Tactics <> o var
R5891:5898 LF.Tactics <> trans_eq thm
R5891:5898 LF.Tactics <> trans_eq thm
prf 7365:7375 <> S_injective
R7393:7395 Coq.Init.Datatypes <> nat ind
R7410:7415 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7417:7419 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7416:7416 LF.Tactics <> n var
R7420:7420 LF.Tactics <> m var
R7404:7406 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7401:7401 Coq.Init.Datatypes <> S constr
R7403:7403 LF.Tactics <> n var
R7407:7407 Coq.Init.Datatypes <> S constr
R7409:7409 LF.Tactics <> m var
R7462:7464 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7465:7468 Coq.Init.Peano <> pred syndef
R7471:7471 Coq.Init.Datatypes <> S constr
R7462:7464 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7465:7468 Coq.Init.Peano <> pred syndef
R7471:7471 Coq.Init.Datatypes <> S constr
prf 7973:7984 <> S_injective'
R8002:8004 Coq.Init.Datatypes <> nat ind
R8019:8024 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8026:8028 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8025:8025 LF.Tactics <> n var
R8029:8029 LF.Tactics <> m var
R8013:8015 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8010:8010 Coq.Init.Datatypes <> S constr
R8012:8012 LF.Tactics <> n var
R8016:8016 Coq.Init.Datatypes <> S constr
R8018:8018 LF.Tactics <> m var
prf 8498:8510 <> injection_ex1
R8530:8532 Coq.Init.Datatypes <> nat ind
R8553:8558 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8562:8564 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8559:8559 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8561:8561 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8560:8560 LF.Tactics <> n var
R8565:8565 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8567:8567 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8566:8566 LF.Tactics <> m var
R8544:8546 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8538:8538 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8540:8541 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8543:8543 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8539:8539 LF.Tactics <> n var
R8542:8542 LF.Tactics <> m var
R8547:8547 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8549:8550 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8552:8552 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8548:8548 LF.Tactics <> o var
R8551:8551 LF.Tactics <> o var
prf 8810:8822 <> injection_ex2
R8840:8842 Coq.Init.Datatypes <> nat ind
R8857:8862 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8864:8866 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8863:8863 LF.Tactics <> n var
R8867:8867 LF.Tactics <> m var
R8851:8853 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8848:8848 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8850:8850 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8849:8849 LF.Tactics <> n var
R8854:8854 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8856:8856 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8855:8855 LF.Tactics <> m var
def 9013:9025 <> injection_ex3
R9056:9056 LF.Tactics <> X var
R9066:9069 LF.Poly <> list ind
R9071:9071 LF.Tactics <> X var
R9097:9102 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9118:9123 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9125:9127 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9124:9124 LF.Tactics <> x var
R9128:9128 LF.Tactics <> y var
R9109:9111 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9104:9107 LF.Poly <> :::x_'::'_x not
R9103:9103 LF.Tactics <> y var
R9108:9108 LF.Tactics <> l var
R9113:9116 LF.Poly <> :::x_'::'_x not
R9112:9112 LF.Tactics <> x var
R9117:9117 LF.Tactics <> j var
R9088:9090 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9078:9081 LF.Poly <> :::x_'::'_x not
R9077:9077 LF.Tactics <> x var
R9083:9086 LF.Poly <> :::x_'::'_x not
R9082:9082 LF.Tactics <> y var
R9087:9087 LF.Tactics <> l var
R9092:9095 LF.Poly <> :::x_'::'_x not
R9091:9091 LF.Tactics <> z var
R9096:9096 LF.Tactics <> j var
prf 9912:9918 <> eqb_0_l
R9948:9951 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9953:9955 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9952:9952 LF.Tactics <> n var
R9941:9943 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9936:9939 LF.Basics <> ::nat_scope:x_'=?'_x not
R9940:9940 LF.Tactics <> n var
R9944:9947 LF.Basics <> true constr
prf 10748:10763 <> discriminate_ex1
R10779:10781 Coq.Init.Datatypes <> nat ind
R10794:10799 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10805:10807 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10801:10803 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R10790:10792 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10787:10787 Coq.Init.Datatypes <> S constr
R10789:10789 LF.Tactics <> n var
R10793:10793 Coq.Init.Datatypes <> O constr
prf 10872:10887 <> discriminate_ex2
R10905:10907 Coq.Init.Datatypes <> nat ind
R10925:10930 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10934:10936 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10931:10931 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10933:10933 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10932:10932 LF.Tactics <> n var
R10937:10937 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10939:10939 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R10938:10938 LF.Tactics <> m var
R10918:10920 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10913:10917 LF.Basics <> false constr
R10921:10924 LF.Basics <> true constr
def 11460:11475 <> discriminate_ex3
R11508:11508 LF.Tactics <> X var
R11518:11521 LF.Poly <> list ind
R11523:11523 LF.Tactics <> X var
R11547:11554 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11556:11558 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11555:11555 LF.Tactics <> x var
R11559:11559 LF.Tactics <> z var
R11542:11544 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11532:11535 LF.Poly <> :::x_'::'_x not
R11531:11531 LF.Tactics <> x var
R11537:11540 LF.Poly <> :::x_'::'_x not
R11536:11536 LF.Tactics <> y var
R11541:11541 LF.Tactics <> l var
R11545:11546 LF.Poly <> :::'['_']' not
prf 11906:11912 <> f_equal
R11941:11944 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11945:11945 LF.Tactics <> B var
R11940:11940 LF.Tactics <> A var
R11954:11954 LF.Tactics <> A var
R11965:11968 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11972:11974 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11969:11969 LF.Tactics <> f var
R11971:11971 LF.Tactics <> x var
R11975:11975 LF.Tactics <> f var
R11977:11977 LF.Tactics <> y var
R11961:11963 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11960:11960 LF.Tactics <> x var
R11964:11964 LF.Tactics <> y var
prf 12480:12484 <> S_inj
R12502:12504 Coq.Init.Datatypes <> nat ind
R12512:12515 LF.Basics <> bool ind
R12542:12551 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12558:12560 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12553:12556 LF.Basics <> ::nat_scope:x_'=?'_x not
R12552:12552 LF.Tactics <> n var
R12557:12557 LF.Tactics <> m var
R12561:12561 LF.Tactics <> b var
R12538:12540 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12524:12524 LF.Basics <> ::nat_scope:x_'=?'_x not
R12528:12533 LF.Basics <> ::nat_scope:x_'=?'_x not
R12537:12537 LF.Basics <> ::nat_scope:x_'=?'_x not
R12525:12525 Coq.Init.Datatypes <> S constr
R12527:12527 LF.Tactics <> n var
R12534:12534 Coq.Init.Datatypes <> S constr
R12536:12536 LF.Tactics <> m var
R12541:12541 LF.Tactics <> b var
prf 13387:13393 <> silly3'
R13409:13411 Coq.Init.Datatypes <> nat ind
R13417:13417 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13456:13462 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13478:13484 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13489:13492 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13507:13507 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13485:13488 LF.Basics <> true constr
R13493:13493 LF.Basics <> ::nat_scope:x_'=?'_x not
R13501:13505 LF.Basics <> ::nat_scope:x_'=?'_x not
R13494:13494 Coq.Init.Datatypes <> S constr
R13497:13497 Coq.Init.Datatypes <> S constr
R13499:13499 LF.Tactics <> n var
R13467:13470 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13477:13477 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13463:13466 LF.Basics <> true constr
R13472:13475 LF.Basics <> ::nat_scope:x_'=?'_x not
R13471:13471 LF.Tactics <> n var
R13431:13434 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13449:13451 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13435:13435 LF.Basics <> ::nat_scope:x_'=?'_x not
R13443:13447 LF.Basics <> ::nat_scope:x_'=?'_x not
R13436:13436 Coq.Init.Datatypes <> S constr
R13439:13439 Coq.Init.Datatypes <> S constr
R13441:13441 LF.Tactics <> n var
R13452:13455 LF.Basics <> true constr
R13424:13426 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13419:13422 LF.Basics <> ::nat_scope:x_'=?'_x not
R13418:13418 LF.Tactics <> n var
R13427:13430 LF.Basics <> true constr
prf 14392:14409 <> plus_n_n_injective
R14443:14451 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14453:14455 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14452:14452 LF.Tactics <> n var
R14456:14456 LF.Tactics <> m var
R14435:14437 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14431:14433 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R14430:14430 LF.Tactics <> n var
R14434:14434 LF.Tactics <> n var
R14439:14441 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R14438:14438 LF.Tactics <> m var
R14442:14442 LF.Tactics <> m var
R14665:14667 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14665:14667 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14724:14732 LF.Induction <> plus_n_Sm thm
R14724:14732 LF.Induction <> plus_n_Sm thm
R14724:14732 LF.Induction <> plus_n_Sm thm
R14760:14768 LF.Induction <> plus_n_Sm thm
R14760:14768 LF.Induction <> plus_n_Sm thm
R14760:14768 LF.Induction <> plus_n_Sm thm
prf 15761:15783 <> double_injective_FAILED
R15823:15831 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15833:15835 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15832:15832 LF.Tactics <> n var
R15836:15836 LF.Tactics <> m var
R15812:15814 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15804:15809 LF.Induction <> double def
R15811:15811 LF.Tactics <> n var
R15815:15820 LF.Induction <> double def
R15822:15822 LF.Tactics <> m var
R16134:16140 LF.Tactics <> f_equal thm
R16134:16140 LF.Tactics <> f_equal thm
prf 18377:18392 <> double_injective
R18432:18440 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18442:18444 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18441:18441 LF.Tactics <> n var
R18445:18445 LF.Tactics <> m var
R18421:18423 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18413:18418 LF.Induction <> double def
R18420:18420 LF.Tactics <> n var
R18424:18429 LF.Induction <> double def
R18431:18431 LF.Tactics <> m var
R19336:19342 LF.Tactics <> f_equal thm
R19336:19342 LF.Tactics <> f_equal thm
prf 20277:20284 <> eqb_true
R20317:20320 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20322:20324 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20321:20321 LF.Tactics <> n var
R20325:20325 LF.Tactics <> m var
R20310:20312 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20305:20308 LF.Basics <> ::nat_scope:x_'=?'_x not
R20304:20304 LF.Tactics <> n var
R20309:20309 LF.Tactics <> m var
R20313:20316 LF.Basics <> true constr
def 20818:20848 <> manual_grade_for_informal_proof
R20852:20857 Coq.Init.Datatypes <> option ind
R20863:20863 LF.Poly <> ::type_scope:x_'*'_x not
R20860:20862 Coq.Init.Datatypes <> nat ind
R20864:20869 Coq.Strings.String <> string ind
R20875:20878 Coq.Init.Datatypes <> None constr
prf 21210:21238 <> double_injective_take2_FAILED
R21278:21286 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21288:21290 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21287:21287 LF.Tactics <> n var
R21291:21291 LF.Tactics <> m var
R21267:21269 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21259:21264 LF.Induction <> double def
R21266:21266 LF.Tactics <> n var
R21270:21275 LF.Induction <> double def
R21277:21277 LF.Tactics <> m var
R21589:21595 LF.Tactics <> f_equal thm
R21589:21595 LF.Tactics <> f_equal thm
prf 22531:22552 <> double_injective_take2
R22592:22600 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22602:22604 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22601:22601 LF.Tactics <> n var
R22605:22605 LF.Tactics <> m var
R22581:22583 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22573:22578 LF.Induction <> double def
R22580:22580 LF.Tactics <> n var
R22584:22589 LF.Induction <> double def
R22591:22591 LF.Tactics <> m var
R23086:23092 LF.Tactics <> f_equal thm
R23086:23092 LF.Tactics <> f_equal thm
prf 25297:25307 <> eqb_id_true
R25342:25345 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25347:25349 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25346:25346 LF.Tactics <> x var
R25350:25350 LF.Tactics <> y var
R25335:25337 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25325:25330 LF.Lists <> eqb_id def
R25334:25334 LF.Tactics <> y var
R25332:25332 LF.Tactics <> x var
R25338:25341 LF.Basics <> true constr
R25411:25413 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25411:25413 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25426:25433 LF.Tactics <> eqb_true thm
R25426:25433 LF.Tactics <> eqb_true thm
prf 25601:25620 <> nth_error_after_last
R25635:25637 Coq.Init.Datatypes <> nat ind
R25656:25659 LF.Poly <> list ind
R25661:25661 LF.Tactics <> X var
R25682:25690 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25704:25706 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25691:25699 LF.Poly <> nth_error def
R25703:25703 LF.Tactics <> n var
R25701:25701 LF.Tactics <> l var
R25707:25710 Coq.Init.Datatypes <> None constr
R25678:25680 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25670:25675 LF.Poly <> length def
R25677:25677 LF.Tactics <> l var
R25681:25681 LF.Tactics <> n var
def 26306:26311 <> square
R26319:26321 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R26318:26318 LF.Tactics <> n var
R26322:26322 LF.Tactics <> n var
prf 26393:26403 <> square_mult
R26433:26435 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26419:26424 LF.Tactics <> square def
R26428:26430 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R26427:26427 LF.Tactics <> n var
R26431:26431 LF.Tactics <> m var
R26444:26446 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R26436:26441 LF.Tactics <> square def
R26443:26443 LF.Tactics <> n var
R26447:26452 LF.Tactics <> square def
R26454:26454 LF.Tactics <> m var
R26780:26785 LF.Tactics <> square def
R27104:27113 LF.Induction <> mult_assoc prfax
R27104:27113 LF.Induction <> mult_assoc prfax
R27104:27113 LF.Induction <> mult_assoc prfax
R27139:27141 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27135:27137 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27131:27133 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27147:27149 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27143:27145 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27139:27141 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27135:27137 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27131:27133 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27147:27149 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27143:27145 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R27168:27176 LF.Induction <> mult_comm prfax
R27168:27176 LF.Induction <> mult_comm prfax
R27168:27176 LF.Induction <> mult_comm prfax
R27185:27194 LF.Induction <> mult_assoc prfax
R27185:27194 LF.Induction <> mult_assoc prfax
R27220:27229 LF.Induction <> mult_assoc prfax
R27220:27229 LF.Induction <> mult_assoc prfax
R27220:27229 LF.Induction <> mult_assoc prfax
def 27612:27614 <> foo
R27620:27622 Coq.Init.Datatypes <> nat ind
prf 27844:27855 <> silly_fact_1
R27878:27880 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27874:27876 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R27869:27871 LF.Tactics <> foo def
R27873:27873 LF.Tactics <> m var
R27892:27894 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R27881:27883 LF.Tactics <> foo def
R27887:27889 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R27886:27886 LF.Tactics <> m var
def 28127:28129 <> bar
R28144:28144 LF.Tactics <> x var
R28155:28155 Coq.Init.Datatypes <> O constr
R28166:28166 Coq.Init.Datatypes <> S constr
prf 28240:28258 <> silly_fact_2_FAILED
R28281:28283 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28277:28279 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R28272:28274 LF.Tactics <> bar def
R28276:28276 LF.Tactics <> m var
R28295:28297 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R28284:28286 LF.Tactics <> bar def
R28290:28292 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R28289:28289 LF.Tactics <> m var
prf 29284:29295 <> silly_fact_2
R29318:29320 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29314:29316 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29309:29311 LF.Tactics <> bar def
R29313:29313 LF.Tactics <> m var
R29332:29334 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29321:29323 LF.Tactics <> bar def
R29327:29329 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29326:29326 LF.Tactics <> m var
prf 29691:29703 <> silly_fact_2'
R29726:29728 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29722:29724 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29717:29719 LF.Tactics <> bar def
R29721:29721 LF.Tactics <> m var
R29740:29742 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29729:29731 LF.Tactics <> bar def
R29735:29737 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R29734:29734 LF.Tactics <> m var
R29774:29776 LF.Tactics <> bar def
def 30426:30433 <> sillyfun
R30440:30442 Coq.Init.Datatypes <> nat ind
R30447:30450 LF.Basics <> bool ind
R30461:30464 LF.Basics <> ::nat_scope:x_'=?'_x not
R30460:30460 LF.Tactics <> n var
R30489:30492 LF.Basics <> ::nat_scope:x_'=?'_x not
R30488:30488 LF.Tactics <> n var
R30513:30517 LF.Basics <> false constr
R30500:30504 LF.Basics <> false constr
R30472:30476 LF.Basics <> false constr
prf 30529:30542 <> sillyfun_false
R30558:30560 Coq.Init.Datatypes <> nat ind
R30576:30578 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30566:30573 LF.Tactics <> sillyfun def
R30575:30575 LF.Tactics <> n var
R30579:30583 LF.Basics <> false constr
R30612:30619 LF.Tactics <> sillyfun def
R30635:30638 LF.Basics <> ::nat_scope:x_'=?'_x not
R30635:30638 LF.Basics <> ::nat_scope:x_'=?'_x not
R30727:30730 LF.Basics <> ::nat_scope:x_'=?'_x not
R30727:30730 LF.Basics <> ::nat_scope:x_'=?'_x not
def 31615:31619 <> split
R31639:31642 LF.Poly <> list ind
R31646:31646 LF.Poly <> ::type_scope:x_'*'_x not
R31645:31645 LF.Tactics <> X var
R31647:31647 LF.Tactics <> Y var
R31668:31668 LF.Poly <> ::type_scope:x_'*'_x not
R31675:31679 LF.Poly <> ::type_scope:x_'*'_x not
R31686:31686 LF.Poly <> ::type_scope:x_'*'_x not
R31669:31672 LF.Poly <> list ind
R31674:31674 LF.Tactics <> X var
R31680:31683 LF.Poly <> list ind
R31685:31685 LF.Tactics <> Y var
R31699:31699 LF.Tactics <> l var
R31710:31711 LF.Poly <> :::'['_']' not
R31716:31716 LF.Poly <> :::'('_x_','_x_')' not
R31719:31720 LF.Poly <> :::'('_x_','_x_')' not
R31723:31723 LF.Poly <> :::'('_x_','_x_')' not
R31717:31718 LF.Poly <> :::'['_']' not
R31721:31722 LF.Poly <> :::'['_']' not
R31735:31738 LF.Poly <> :::x_'::'_x not
R31729:31729 LF.Poly <> :::'('_x_','_x_')' not
R31731:31732 LF.Poly <> :::'('_x_','_x_')' not
R31734:31734 LF.Poly <> :::'('_x_','_x_')' not
R31756:31760 LF.Tactics <> split def
R31777:31777 LF.Poly <> :::'('_x_','_x_')' not
R31780:31781 LF.Poly <> :::'('_x_','_x_')' not
R31784:31784 LF.Poly <> :::'('_x_','_x_')' not
R31789:31789 LF.Poly <> :::'('_x_','_x_')' not
R31797:31798 LF.Poly <> :::'('_x_','_x_')' not
R31806:31806 LF.Poly <> :::'('_x_','_x_')' not
R31791:31794 LF.Poly <> :::x_'::'_x not
R31800:31803 LF.Poly <> :::x_'::'_x not
prf 31916:31928 <> combine_split
R31948:31951 LF.Poly <> list ind
R31955:31957 LF.Poly <> ::type_scope:x_'*'_x not
R31954:31954 LF.Tactics <> X var
R31958:31958 LF.Tactics <> Y var
R31989:31994 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32008:32010 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31995:32001 LF.Poly <> combine def
R32006:32007 LF.Tactics <> l2 var
R32003:32004 LF.Tactics <> l1 var
R32011:32011 LF.Tactics <> l var
R31978:31980 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31971:31975 LF.Tactics <> split def
R31977:31977 LF.Tactics <> l var
R31981:31981 LF.Poly <> :::'('_x_','_x_')' not
R31984:31985 LF.Poly <> :::'('_x_','_x_')' not
R31988:31988 LF.Poly <> :::'('_x_','_x_')' not
R31982:31983 LF.Tactics <> l1 var
R31986:31987 LF.Tactics <> l2 var
R32281:32285 LF.Tactics <> split def
R32281:32285 LF.Tactics <> split def
R32343:32347 LF.Tactics <> split def
R32343:32347 LF.Tactics <> split def
R32405:32409 LF.Tactics <> split def
R32405:32409 LF.Tactics <> split def
R32492:32496 LF.Tactics <> split def
R32492:32496 LF.Tactics <> split def
R32573:32575 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32560:32566 LF.Poly <> combine def
R32573:32575 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32560:32566 LF.Poly <> combine def
def 33196:33204 <> sillyfun1
R33211:33213 Coq.Init.Datatypes <> nat ind
R33218:33221 LF.Basics <> bool ind
R33232:33235 LF.Basics <> ::nat_scope:x_'=?'_x not
R33231:33231 LF.Tactics <> n var
R33259:33262 LF.Basics <> ::nat_scope:x_'=?'_x not
R33258:33258 LF.Tactics <> n var
R33282:33286 LF.Basics <> false constr
R33270:33273 LF.Basics <> true constr
R33243:33246 LF.Basics <> true constr
prf 33513:33532 <> sillyfun1_odd_FAILED
R33548:33550 Coq.Init.Datatypes <> nat ind
R33577:33585 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33592:33594 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33586:33589 LF.Basics <> oddb def
R33591:33591 LF.Tactics <> n var
R33595:33598 LF.Basics <> true constr
R33570:33572 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33559:33567 LF.Tactics <> sillyfun1 def
R33569:33569 LF.Tactics <> n var
R33573:33576 LF.Basics <> true constr
R33630:33638 LF.Tactics <> sillyfun1 def
R33660:33663 LF.Basics <> ::nat_scope:x_'=?'_x not
R33660:33663 LF.Basics <> ::nat_scope:x_'=?'_x not
prf 34463:34475 <> sillyfun1_odd
R34491:34493 Coq.Init.Datatypes <> nat ind
R34520:34528 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34535:34537 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34529:34532 LF.Basics <> oddb def
R34534:34534 LF.Tactics <> n var
R34538:34541 LF.Basics <> true constr
R34513:34515 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34502:34510 LF.Tactics <> sillyfun1 def
R34512:34512 LF.Tactics <> n var
R34516:34519 LF.Basics <> true constr
R34573:34581 LF.Tactics <> sillyfun1 def
R34603:34606 LF.Basics <> ::nat_scope:x_'=?'_x not
R34603:34606 LF.Basics <> ::nat_scope:x_'=?'_x not
R34852:34859 LF.Tactics <> eqb_true thm
R34852:34859 LF.Tactics <> eqb_true thm
R35150:35153 LF.Basics <> ::nat_scope:x_'=?'_x not
R35150:35153 LF.Basics <> ::nat_scope:x_'=?'_x not
R35210:35217 LF.Tactics <> eqb_true thm
R35210:35217 LF.Tactics <> eqb_true thm
prf 35394:35415 <> bool_fn_applied_thrice
R35437:35440 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35441:35444 LF.Basics <> bool ind
R35433:35436 LF.Basics <> bool ind
R35452:35455 LF.Basics <> bool ind
R35472:35474 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35461:35461 LF.Tactics <> f var
R35464:35464 LF.Tactics <> f var
R35467:35467 LF.Tactics <> f var
R35469:35469 LF.Tactics <> b var
R35475:35475 LF.Tactics <> f var
R35477:35477 LF.Tactics <> b var
R35511:35514 LF.Basics <> true constr
R35528:35532 LF.Basics <> false constr
R35511:35514 LF.Basics <> true constr
R35528:35532 LF.Basics <> false constr
R35528:35532 LF.Basics <> false constr
prf 38487:38493 <> eqb_sym
R38511:38513 Coq.Init.Datatypes <> nat ind
R38519:38519 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38526:38530 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38537:38537 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38521:38524 LF.Basics <> ::nat_scope:x_'=?'_x not
R38520:38520 LF.Tactics <> n var
R38525:38525 LF.Tactics <> m var
R38532:38535 LF.Basics <> ::nat_scope:x_'=?'_x not
R38531:38531 LF.Tactics <> m var
R38536:38536 LF.Tactics <> n var
prf 39041:39049 <> eqb_trans
R39082:39087 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39101:39106 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39113:39115 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39108:39111 LF.Basics <> ::nat_scope:x_'=?'_x not
R39107:39107 LF.Tactics <> n var
R39112:39112 LF.Tactics <> p var
R39116:39119 LF.Basics <> true constr
R39094:39096 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39089:39092 LF.Basics <> ::nat_scope:x_'=?'_x not
R39088:39088 LF.Tactics <> m var
R39093:39093 LF.Tactics <> p var
R39097:39100 LF.Basics <> true constr
R39075:39077 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39070:39073 LF.Basics <> ::nat_scope:x_'=?'_x not
R39069:39069 LF.Tactics <> n var
R39074:39074 LF.Tactics <> m var
R39078:39081 LF.Basics <> true constr
R39147:39154 LF.Tactics <> eqb_true thm
R39147:39154 LF.Tactics <> eqb_true thm
R39170:39177 LF.Tactics <> eqb_true thm
R39170:39177 LF.Tactics <> eqb_true thm
R39230:39232 Coq.Init.Datatypes <> nat ind
R39241:39243 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39236:39239 LF.Basics <> ::nat_scope:x_'=?'_x not
R39235:39235 LF.Tactics <> n var
R39240:39240 LF.Tactics <> n var
R39244:39247 LF.Basics <> true constr
R39230:39232 Coq.Init.Datatypes <> nat ind
R39241:39243 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39236:39239 LF.Basics <> ::nat_scope:x_'=?'_x not
R39235:39235 LF.Tactics <> n var
R39240:39240 LF.Tactics <> n var
R39244:39247 LF.Basics <> true constr
def 40028:40050 <> split_combine_statement
R40228:40231 LF.Poly <> list ind
R40233:40233 LF.Tactics <> X var
R40239:40242 LF.Poly <> list ind
R40244:40244 LF.Tactics <> Y var
R40273:40276 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40298:40300 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40277:40281 LF.Tactics <> split def
R40284:40290 LF.Poly <> combine def
R40295:40296 LF.Tactics <> l2 var
R40292:40293 LF.Tactics <> l1 var
R40301:40301 LF.Poly <> :::'('_x_','_x_')' not
R40304:40305 LF.Poly <> :::'('_x_','_x_')' not
R40308:40308 LF.Poly <> :::'('_x_','_x_')' not
R40302:40303 LF.Tactics <> l1 var
R40306:40307 LF.Tactics <> l2 var
R40261:40263 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40252:40257 LF.Poly <> length def
R40259:40260 LF.Tactics <> l1 var
R40264:40269 LF.Poly <> length def
R40271:40272 LF.Tactics <> l2 var
prf 40321:40333 <> split_combine
R40337:40359 LF.Tactics <> split_combine_statement def
R40378:40400 LF.Tactics <> split_combine_statement def
R40590:40594 LF.Tactics <> split def
R40597:40603 LF.Poly <> combine def
R40590:40594 LF.Tactics <> split def
R40597:40603 LF.Poly <> combine def
def 40782:40811 <> manual_grade_for_split_combine
R40815:40820 Coq.Init.Datatypes <> option ind
R40826:40826 LF.Poly <> ::type_scope:x_'*'_x not
R40823:40825 Coq.Init.Datatypes <> nat ind
R40827:40832 Coq.Strings.String <> string ind
R40838:40841 Coq.Init.Datatypes <> None constr
prf 41021:41035 <> filter_exercise
R41066:41069 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41070:41073 LF.Basics <> bool ind
R41065:41065 LF.Tactics <> X var
R41110:41110 LF.Tactics <> X var
R41121:41124 LF.Poly <> list ind
R41126:41126 LF.Tactics <> X var
R41158:41166 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41173:41175 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41167:41170 LF.Tactics <> test var
R41172:41172 LF.Tactics <> x var
R41176:41179 LF.Basics <> true constr
R41148:41150 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41135:41140 LF.Poly <> filter def
R41147:41147 LF.Tactics <> l var
R41142:41145 LF.Tactics <> test var
R41152:41155 LF.Poly <> :::x_'::'_x not
R41151:41151 LF.Tactics <> x var
R41156:41157 LF.Tactics <> lf var
def 42281:42287 <> forallb
R42309:42312 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42313:42316 LF.Basics <> bool ind
R42308:42308 LF.Tactics <> X var
R42324:42327 LF.Poly <> list ind
R42329:42329 LF.Tactics <> X var
R42334:42337 LF.Basics <> bool ind
R42406:42406 LF.Tactics <> l var
R42417:42418 LF.Poly <> :::'['_']' not
R42423:42426 LF.Basics <> true constr
R42433:42434 LF.Poly <> :::x_'::'_x not
R42441:42441 LF.Basics <> :::x_'&&'_x not
R42448:42453 LF.Basics <> :::x_'&&'_x not
R42469:42469 LF.Basics <> :::x_'&&'_x not
R42442:42445 LF.Tactics <> test var
R42454:42460 LF.Tactics <> forallb def
R42462:42465 LF.Tactics <> test var
def 42487:42500 <> test_forallb_1
R42528:42530 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42504:42510 LF.Tactics <> forallb def
R42517:42517 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42519:42519 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42521:42521 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42523:42523 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42525:42525 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42527:42527 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42512:42515 LF.Basics <> oddb def
R42531:42534 LF.Basics <> true constr
def 42571:42584 <> test_forallb_2
R42614:42616 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42588:42594 LF.Tactics <> forallb def
R42601:42601 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42607:42607 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42613:42613 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42602:42606 LF.Basics <> false constr
R42608:42612 LF.Basics <> false constr
R42596:42599 LF.Basics <> negb def
R42617:42620 LF.Basics <> true constr
def 42657:42670 <> test_forallb_3
R42697:42699 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42674:42680 LF.Tactics <> forallb def
R42688:42688 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42690:42690 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42692:42692 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42694:42694 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42696:42696 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42682:42686 LF.Basics <> evenb def
R42700:42704 LF.Basics <> false constr
def 42742:42755 <> test_forallb_4
R42789:42791 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42759:42765 LF.Tactics <> forallb def
R42787:42788 LF.Poly <> :::'['_']' not
R42779:42782 LF.Basics <> ::nat_scope:x_'=?'_x not
R42783:42783 LF.Tactics <> n var
R42792:42795 LF.Basics <> true constr
def 42833:42839 <> existsb
R42861:42864 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42865:42868 LF.Basics <> bool ind
R42860:42860 LF.Tactics <> X var
R42876:42879 LF.Poly <> list ind
R42881:42881 LF.Tactics <> X var
R42886:42889 LF.Basics <> bool ind
R42902:42902 LF.Tactics <> l var
R42913:42914 LF.Poly <> :::'['_']' not
R42919:42923 LF.Basics <> false constr
R42930:42931 LF.Poly <> :::x_'::'_x not
R42938:42938 LF.Basics <> :::x_'||'_x not
R42945:42950 LF.Basics <> :::x_'||'_x not
R42966:42966 LF.Basics <> :::x_'||'_x not
R42939:42942 LF.Tactics <> test var
R42951:42957 LF.Tactics <> existsb def
R42959:42962 LF.Tactics <> test var
def 42984:42997 <> test_existsb_1
R43036:43038 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43001:43007 LF.Tactics <> existsb def
R43027:43027 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43029:43029 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43031:43031 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43033:43033 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43035:43035 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43020:43023 LF.Basics <> ::nat_scope:x_'=?'_x not
R43024:43024 LF.Tactics <> n var
R43039:43043 LF.Basics <> false constr
def 43080:43093 <> test_existsb_2
R43134:43136 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43097:43103 LF.Tactics <> existsb def
R43117:43117 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43122:43122 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43127:43127 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43133:43133 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43118:43121 LF.Basics <> true constr
R43123:43126 LF.Basics <> true constr
R43128:43132 LF.Basics <> false constr
R43106:43109 LF.Basics <> andb def
R43111:43114 LF.Basics <> true constr
R43137:43140 LF.Basics <> true constr
def 43177:43190 <> test_existsb_3
R43220:43222 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43194:43200 LF.Tactics <> existsb def
R43207:43207 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43209:43209 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43211:43211 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43213:43213 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43215:43215 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43217:43217 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43219:43219 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43202:43205 LF.Basics <> oddb def
R43223:43226 LF.Basics <> true constr
def 43263:43276 <> test_existsb_4
R43296:43298 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43280:43286 LF.Tactics <> existsb def
R43294:43295 LF.Poly <> :::'['_']' not
R43288:43292 LF.Basics <> evenb def
R43299:43303 LF.Basics <> false constr
def 43343:43350 <> existsb'
R43372:43375 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43376:43379 LF.Basics <> bool ind
R43371:43371 LF.Tactics <> X var
R43387:43390 LF.Poly <> list ind
R43392:43392 LF.Tactics <> X var
R43397:43400 LF.Basics <> bool ind
R43407:43410 LF.Basics <> negb def
R43413:43419 LF.Tactics <> forallb def
R43448:43448 LF.Tactics <> l var
R43428:43428 LF.Tactics <> X var
R43433:43436 LF.Basics <> negb def
R43439:43442 LF.Tactics <> test var
R43444:43444 LF.Tactics <> x var
def 43461:43475 <> test_existsb'_1
R43515:43517 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43479:43486 LF.Tactics <> existsb' def
R43506:43506 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43508:43508 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43510:43510 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43512:43512 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43514:43514 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43499:43502 LF.Basics <> ::nat_scope:x_'=?'_x not
R43503:43503 LF.Tactics <> n var
R43518:43522 LF.Basics <> false constr
def 43559:43573 <> test_existsb'_2
R43615:43617 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43577:43584 LF.Tactics <> existsb' def
R43598:43598 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43603:43603 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43608:43608 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43614:43614 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43599:43602 LF.Basics <> true constr
R43604:43607 LF.Basics <> true constr
R43609:43613 LF.Basics <> false constr
R43587:43590 LF.Basics <> andb def
R43592:43595 LF.Basics <> true constr
R43618:43621 LF.Basics <> true constr
def 43658:43672 <> test_existsb'_3
R43703:43705 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43676:43683 LF.Tactics <> existsb' def
R43690:43690 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43692:43692 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43694:43694 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43696:43696 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43698:43698 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43700:43700 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43702:43702 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R43685:43688 LF.Basics <> oddb def
R43706:43709 LF.Basics <> true constr
def 43746:43760 <> test_existsb'_4
R43781:43783 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43764:43771 LF.Tactics <> existsb' def
R43779:43780 LF.Poly <> :::'['_']' not
R43773:43777 LF.Basics <> evenb def
R43784:43788 LF.Basics <> false constr
prf 43825:43840 <> existsb_existsb'
R43871:43874 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43875:43878 LF.Basics <> bool ind
R43870:43870 LF.Tactics <> X var
R43886:43889 LF.Poly <> list ind
R43891:43891 LF.Tactics <> X var
R43911:43913 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43897:43903 LF.Tactics <> existsb def
R43910:43910 LF.Tactics <> l var
R43905:43908 LF.Tactics <> test var
R43914:43921 LF.Tactics <> existsb' def
R43928:43928 LF.Tactics <> l var
R43923:43926 LF.Tactics <> test var
R44005:44012 LF.Tactics <> existsb' def
R44045:44048 LF.Basics <> bool ind
R44064:44066 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44051:44054 LF.Basics <> negb def
R44058:44061 LF.Basics <> :::x_'&&'_x not
R44057:44057 LF.Tactics <> a var
R44062:44062 LF.Tactics <> b var
R44073:44076 LF.Basics <> :::x_'||'_x not
R44067:44070 LF.Basics <> negb def
R44072:44072 LF.Tactics <> a var
R44077:44080 LF.Basics <> negb def
R44082:44082 LF.Tactics <> b var
R44045:44048 LF.Basics <> bool ind
R44064:44066 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44051:44054 LF.Basics <> negb def
R44058:44061 LF.Basics <> :::x_'&&'_x not
R44057:44057 LF.Tactics <> a var
R44062:44062 LF.Tactics <> b var
R44073:44076 LF.Basics <> :::x_'||'_x not
R44067:44070 LF.Basics <> negb def
R44072:44072 LF.Tactics <> a var
R44077:44080 LF.Basics <> negb def
R44082:44082 LF.Tactics <> b var
R44111:44125 LF.Basics <> negb_involutive thm
R44111:44125 LF.Basics <> negb_involutive thm
R44111:44125 LF.Basics <> negb_involutive thm
